<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
   
   <!-- Root Context: defines shared resources visible to all other web components -->
   <!-- dataBase 설정내용을 작성 -->
   <bean id="realDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
      <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/><!-- property는 셋터로 접근 -->
      <property name="url" value="jdbc:oracle:thin:@rclass.iptime.org:1521:xe"/>
      <property name="username" value="hu"/>
      <property name="password" value="hospital"/>
   </bean>
   
   <bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
   	<constructor-arg ref="realDataSource" />
   		<property name="logFormatter">
   			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
   				<property name="loggingType" value="MULTI_LINE" />
   				<property name="sqlPrefix" value="[SQL]" />
   			</bean>
   		</property>
   </bean>
   
   <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="dataSource"/>
      <property name="mapperLocations" value="classpath*:mapper/**/*.xml"/> <!-- **은 하위 디렉토리 전부를 뜻 mapper는 여러개라서 *씀-->
      <property name="configLocation" value="classpath:mybatis-config.xml"/> <!-- config 설정파일은 하나이기 때문에 특정해서 씀 -->
   </bean>
   
   <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
      <constructor-arg index="0" ref="sqlSessionFactoryBean"/>
   </bean>
   
   <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource"></property>
   </bean>
     <!--트랜잭션 어노테이션 방식 적용하기  -->
<!--    <tx:annotation-driven transaction-manager="transactionManager"/> -->
   <!-- transaction-manager 은 위의 빈객체등록한 id! -->
    
   <!-- 선언적방식으로 트랜잭션 처리하기 / 얘를 다시 AOP포인트것으로 지정해야함!-->
   <tx:advice id="txAdvice" transaction-manager="transactionManager">
   		<tx:attributes><!--어떤 메서드의 적용할것인지 속성설정하기 tx:attributes  -->
		<!--insert*로 시작하는 모든 것  -->
   			<tx:method name="insert*" rollback-for="Exception"/><!--exception이면 모든 예외전부(범위)  -->
   			<tx:method name="update*"/>
   			<tx:method name="delete*"/>
   		</tx:attributes>
   </tx:advice>
   
   <aop:config>
   	<aop:pointcut expression="execution(* com.web.spring..*ServiceImpl.*(..))" id="serviceMethod"/>
	<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod"/><!-- advice-ref참조한 어드바이스  -->
   </aop:config>

   <bean id="encryptor" class="com.web.spring.common.AESEncrypt">
      <constructor-arg index="0" value="c:\dev\"/>
   </bean>
   <!-- 회원가입 메일 인증, 비밀번호 찾기 -->
	<bean id="mailSender"	class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" /><!-- 465 or 25 -->
		<property name="username" value="qkrejrgus4713@gmail.com" />
		<property name="password" value="ejrgus4512+-" />
		<property name="defaultEncoding" value="utf-8" />
		<property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.smtp.auth">true</prop>
            </props>
        </property>
	</bean>	
	<bean id="email" class="com.web.spring.member.model.vo.Email">
	</bean>
	<bean id="emailSender" class="com.web.spring.common.EmailSender">
	</bean>

</beans>
